---
name: Coverage

on:
  pull_request:
  push:
    branches: [main]
    paths:
      - dumbpw/**
      - tests/**
      - .coveragerc
      - .github/workflows/coverage.yaml

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # ----------------------------------------------
      # check-out repo and set-up python
      # ----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55  # v5.5.0
        with:
          python-version: ${{ matrix.python-version }}

      # ----------------------------------------------
      # build virtual environment and install
      # ----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a  # v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cached venv not found
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install module
        run: poetry install --no-interaction

      # ----------------------------------------------
      # publish coverage report
      # ----------------------------------------------
      - name: Publish coverage report
        uses: paambaati/codeclimate-action@f429536ee076d758a24705203199548125a28ca7  # v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: poetry run pytest --cov-report xml
          coverageLocations: ${{github.workspace}}/cov/coverage.xml:coverage.py
