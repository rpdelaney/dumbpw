---
name: CI
# Docs on poetry runner for github actions:
# https://github.com/marketplace/actions/install-poetry-action

on:
  pull_request:
  push:
    branches: [main]
    paths:
      - dumbpw/**
      - tests/**
      - pyproject.toml
      - poetry.lock
      - .pre-commit-config.yaml
      - .github/workflows/integration.yaml

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # ----------------------------------------------
      # check-out repo and set-up python
      # ----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4.3.0
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      # ----------------------------------------------
      # build virtual environment and install
      # ----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cached venv not found
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install module
        run: poetry install --no-interaction

      - name: Install pre-commit
        run: pip install pre-commit
      - name: cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        with:
          key: pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          path: ~/.cache/pre-commit
      - name: Pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure

  test:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      # ----------------------------------------------
      # check-out repo and set-up python
      # ----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4.3.0
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      # ----------------------------------------------
      # build virtual environment and install
      # ----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a  # v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cached venv not found
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install module
        run: poetry install --no-interaction

      # ----------------------------------------------
      # run tests
      # ----------------------------------------------
      - name: Run tests
        run: poetry run pytest
